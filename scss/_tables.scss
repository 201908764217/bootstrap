//
// Basic Bootstrap table
//

.table {
  --table-cell-padding: #{$table-cell-padding};
  --table-border-width: 0;
  --table-border-bottom-width: #{$table-border-width};
  --table-bg: #{$table-bg};
  --table-accent-bg: transparent;
  --table-striped-color: #{$table-striped-color};
  --table-striped-bg: #{$table-striped-bg};
  --table-active-color: #{$table-active-color};
  --table-active-bg: #{$table-active-bg};
  --table-hover-color: #{$table-hover-color};
  --table-hover-bg: #{$table-hover-bg};
  --table-children-border-width: #{$table-children-border-width};

  width: 100%;
  margin-bottom: $spacer;
  color: $table-color;
  vertical-align: $table-cell-vertical-align;
  border-color: $table-border-color;

  // Target th & td
  // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.
  // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).
  // Another advantage is that this generates less code and makes the selector less specific making it easier to override.
  // stylelint-disable-next-line selector-max-universal
  > :not(caption) > * > * {
    padding: var(--table-cell-padding);
    background-color: var(--table-bg);
    background-image: linear-gradient(var(--table-accent-bg), var(--table-accent-bg));
    border-width: var(--table-border-width) var(--table-border-width) var(--table-border-bottom-width);
  }

  > tbody {
    vertical-align: inherit;
  }

  > thead {
    vertical-align: bottom;
  }

  // Change border width between thead, tbody and tfoot.
  > :not(caption) + * {
    border-top-width: var(--table-children-border-width);
  }
}


//
// Change placement of captions with a class
//

.caption-top {
  caption-side: top;
}


//
// Condensed table w/ half padding
//

.table-sm {
  --table-cell-padding: #{$table-cell-padding-sm};
}


// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  --table-border-width: #{$table-border-width};
}

.table-borderless {
  --table-border-bottom-width: 0;
  --table-children-border-width: 0;
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  > tbody > tr:nth-of-type(#{$table-striped-order}) {
    --table-accent-bg: var(--table-striped-bg);
    color: var(--table-striped-color);
  }
}

// Active table
//
// The `.table-active` class can be added to highlight rows or cells

.table-active {
  --table-accent-bg: var(--table-active-bg);
  color: var(--table-active-color);
}

// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  > tbody > tr:hover {
    --table-accent-bg: var(--table-hover-bg);
    color: var(--table-hover-color);
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

@each $color, $value in $table-variants {
  @include table-row-variant($color, $value);
}

// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;

        // Prevent double border on horizontal scroll due to use of `display: block;`
        > .table-bordered {
          border: 0;
        }
      }
    }
  }
}
